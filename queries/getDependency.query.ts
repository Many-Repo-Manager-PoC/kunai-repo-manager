// GENERATED by @gel/generate v0.6.3

import type {Executor} from "gel";

export type GetDependencyArgs = {
  readonly "dependency_type"?: ("Dev" | "Prod") | null;
  readonly "repository_id"?: number | null;
};

export type GetDependencyReturns = Array<{
  "dependency_version": string;
  "name": string;
  "repository_id": number;
  "id": string;
  "dependency_type": ("Dev" | "Prod");
  "last_updated": Date | null;
  "package_json": {
    "repository_id": number;
    "name": string;
    "package_version": string;
    "id": string;
    "last_updated": Date | null;
  } | null;
}>;

export function getDependency(client: Executor, args: GetDependencyArgs): Promise<GetDependencyReturns> {
  return client.query(`\
# get Dependency by dependency type
select Dependency { **
} filter assert_exists(Dependency.dependency_type) ?= <optional DependencyType>$dependency_type;

# get packageJson by dependency repository_id
select Dependency { **
} filter assert_exists(Dependency.repository_id) ?= <optional int64>$repository_id;

# This is all one query, but it's split up for readability. All filters are optional.`, args);

}
