// GENERATED by @gel/generate v0.6.3

import type {Executor} from "gel";

export type GetDependenciesForRepoArgs = {
  readonly "repository_id"?: number | null;
  readonly "package_json_name"?: string | null;
};

export type GetDependenciesForRepoReturns = Array<{
  "dependency_version": string;
  "name": string;
  "dependency_type": ("Dev" | "Prod") | null;
  "last_updated": Date | null;
  "id": string;
  "package_json": {
    "name": string;
    "package_version": string;
    "last_updated": Date | null;
    "id": string;
  };
  "repository": {
    "clone_url": string | null;
    "allow_auto_merge": boolean | null;
    "allow_forking": boolean | null;
    "allow_merge_commit": boolean | null;
    "allow_rebase_merge": boolean | null;
    "allow_squash_merge": boolean | null;
    "archived": boolean;
    "archive_url": string | null;
    "contents_url": string;
    "contributors_url": string;
    "created_at": string;
    "default_branch": string;
    "delete_branch_on_merge": boolean | null;
    "deployments_url": string;
    "description": string;
    "disabled": boolean;
    "downloads_url": string;
    "events_url": string;
    "fork": boolean;
    "forks": number;
    "forks_count": number;
    "forks_url": string | null;
    "full_name": string;
    "has_discussions": boolean;
    "has_downloads": boolean | null;
    "has_issues": boolean;
    "has_pages": boolean;
    "has_projects": boolean;
    "has_wiki": boolean;
    "homepage": string;
    "hooks_url": string;
    "html_url": string;
    "is_template": boolean | null;
    "issue_comment_url": string;
    "issue_events_url": string;
    "issues_url": string;
    "keys_url": string;
    "labels_url": string;
    "language": string;
    "languages_url": string;
    "master_branch": string | null;
    "name": string;
    "node_id": string;
    "notifications_url": string;
    "open_issues": number;
    "open_issues_count": number;
    "private": boolean;
    "pushed_at": string;
    "size": number;
    "ssh_url": string;
    "stargazers_count": number;
    "topics": Array<string>;
    "updated_at": string;
    "url": string;
    "visibility": string | null;
    "watchers_count": number;
    "assignees_url": string | null;
    "blobs_url": string | null;
    "branches_url": string | null;
    "collaborators_url": string | null;
    "comments_url": string | null;
    "commits_url": string | null;
    "compare_url": string | null;
    "git_commits_url": string | null;
    "git_refs_url": string | null;
    "git_tags_url": string | null;
    "git_url": string | null;
    "merges_url": string | null;
    "milestones_url": string | null;
    "mirror_url": string | null;
    "pulls_url": string | null;
    "releases_url": string | null;
    "stargazers_url": string | null;
    "statuses_url": string | null;
    "subscribers_url": string | null;
    "subscription_url": string | null;
    "svn_url": string | null;
    "tags_url": string | null;
    "teams_url": string | null;
    "trees_url": string | null;
    "last_updated": Date | null;
    "id": string;
    "repository_id": number;
  };
}>;

export function getDependenciesForRepo(client: Executor, args: GetDependenciesForRepoArgs): Promise<GetDependenciesForRepoReturns> {
  return client.query(`\
# Get all dependencies by repository_id or package_json name
select Dependency {
  **
} filter (
  assert_exists(Repository.repository_id) ?= <optional int64>$repository_id 
  or assert_exists(Dependency.package_json.name) ?= <optional str>$package_json_name
);`, args);

}
