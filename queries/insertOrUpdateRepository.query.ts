// GENERATED by @gel/generate v0.6.3

import type {Executor} from "gel";

export type InsertOrUpdateRepositoryArgs = {
  readonly "repository_id": number;
  readonly "archived": boolean;
  readonly "contents_url": string;
  readonly "contributors_url": string;
  readonly "created_at": string;
  readonly "default_branch": string;
  readonly "deployments_url": string;
  readonly "description": string;
  readonly "disabled": boolean;
  readonly "downloads_url": string;
  readonly "events_url": string;
  readonly "fork": boolean;
  readonly "forks": number;
  readonly "forks_count": number;
  readonly "full_name": string;
  readonly "has_discussions": boolean;
  readonly "has_issues": boolean;
  readonly "has_pages": boolean;
  readonly "has_projects": boolean;
  readonly "has_wiki": boolean;
  readonly "homepage": string;
  readonly "hooks_url": string;
  readonly "html_url": string;
  readonly "issue_comment_url": string;
  readonly "issue_events_url": string;
  readonly "issues_url": string;
  readonly "keys_url": string;
  readonly "labels_url": string;
  readonly "language": string;
  readonly "languages_url": string;
  readonly "name": string;
  readonly "node_id": string;
  readonly "notifications_url": string;
  readonly "open_issues": number;
  readonly "open_issues_count": number;
  readonly "owner_user_id": number;
  readonly "owner_avatar_url": string;
  readonly "owner_name": string;
  readonly "owner_email": string;
  readonly "owner_login": string;
  readonly "owner_role_type": string;
  readonly "owner_site_admin": boolean;
  readonly "owner_events_url"?: string | null;
  readonly "owner_followers_url"?: string | null;
  readonly "owner_following_url"?: string | null;
  readonly "owner_gists_url"?: string | null;
  readonly "owner_gravatar_id"?: string | null;
  readonly "owner_html_url"?: string | null;
  readonly "owner_node_id"?: string | null;
  readonly "owner_organizations_url"?: string | null;
  readonly "owner_received_events_url"?: string | null;
  readonly "owner_repos_url"?: string | null;
  readonly "owner_starred_url"?: string | null;
  readonly "owner_starred_at"?: string | null;
  readonly "owner_subscriptions_url"?: string | null;
  readonly "owner_url"?: string | null;
  readonly "owner_user_view_type"?: string | null;
  readonly "private": boolean;
  readonly "pushed_at": string;
  readonly "url": string;
  readonly "ssh_url": string;
  readonly "size": number;
  readonly "stargazers_count": number;
  readonly "updated_at": string;
  readonly "watchers_count": number;
  readonly "license_name": string;
  readonly "license_key": string;
  readonly "license_url": string;
  readonly "license_spdx_id": string;
  readonly "license_node_id": string;
  readonly "license_html_url"?: string | null;
  readonly "archive_url"?: string | null;
  readonly "assignees_url"?: string | null;
  readonly "blobs_url"?: string | null;
  readonly "branches_url"?: string | null;
  readonly "clone_url"?: string | null;
  readonly "collaborators_url"?: string | null;
  readonly "comments_url"?: string | null;
  readonly "commits_url"?: string | null;
  readonly "compare_url"?: string | null;
  readonly "merges_url"?: string | null;
  readonly "milestones_url"?: string | null;
  readonly "mirror_url"?: string | null;
  readonly "git_commits_url"?: string | null;
  readonly "git_refs_url"?: string | null;
  readonly "git_tags_url"?: string | null;
  readonly "git_url"?: string | null;
  readonly "stargazers_url"?: string | null;
  readonly "statuses_url"?: string | null;
  readonly "subscribers_url"?: string | null;
  readonly "subscription_url"?: string | null;
  readonly "pulls_url"?: string | null;
  readonly "releases_url"?: string | null;
  readonly "svn_url"?: string | null;
  readonly "tags_url"?: string | null;
  readonly "teams_url"?: string | null;
  readonly "trees_url"?: string | null;
  readonly "allow_auto_merge"?: boolean | null;
  readonly "allow_forking"?: boolean | null;
  readonly "allow_merge_commit"?: boolean | null;
  readonly "allow_rebase_merge"?: boolean | null;
  readonly "allow_squash_merge"?: boolean | null;
  readonly "delete_branch_on_merge"?: boolean | null;
  readonly "forks_url"?: string | null;
  readonly "has_downloads"?: boolean | null;
  readonly "is_template"?: boolean | null;
  readonly "master_branch"?: string | null;
  readonly "template_repository_id": number;
  readonly "topics"?: string | null;
  readonly "visibility"?: string | null;
};

export type InsertOrUpdateRepositoryReturns = {
  "temp_clone_token": string | null;
  "team_id": number | null;
  "subscribers_count": number | null;
  "squash_merge_commit_title": string | null;
  "squash_merge_commit_message": string | null;
  "network_count": number | null;
  "merge_commit_title": string | null;
  "merge_commit_message": string | null;
  "auto_init": boolean | null;
  "anonymous_access_enabled": boolean | null;
  "last_updated": Date | null;
  "watchers_count": number;
  "visibility": ("public" | "private") | null;
  "url": string;
  "updated_at": string;
  "trees_url": string | null;
  "topics": Array<string>;
  "teams_url": string | null;
  "tags_url": string | null;
  "svn_url": string | null;
  "subscription_url": string | null;
  "subscribers_url": string | null;
  "statuses_url": string | null;
  "stargazers_url": string | null;
  "stargazers_count": number;
  "ssh_url": string;
  "size": number;
  "releases_url": string | null;
  "pushed_at": string;
  "pulls_url": string | null;
  "private": boolean | null;
  "open_issues_count": number;
  "open_issues": number;
  "notifications_url": string;
  "node_id": string;
  "name": string;
  "mirror_url": string | null;
  "milestones_url": string | null;
  "merges_url": string | null;
  "master_branch": string | null;
  "languages_url": string;
  "language": string;
  "labels_url": string;
  "keys_url": string;
  "issues_url": string;
  "issue_events_url": string;
  "issue_comment_url": string;
  "is_template": boolean | null;
  "html_url": string;
  "hooks_url": string;
  "homepage": string | null;
  "has_wiki": boolean | null;
  "has_projects": boolean | null;
  "has_pages": boolean;
  "has_issues": boolean | null;
  "has_downloads": boolean | null;
  "has_discussions": boolean;
  "git_url": string | null;
  "git_tags_url": string | null;
  "git_refs_url": string | null;
  "git_commits_url": string | null;
  "full_name": string;
  "forks_url": string | null;
  "forks_count": number;
  "forks": number;
  "fork": boolean;
  "events_url": string;
  "downloads_url": string;
  "disabled": boolean;
  "description": string | null;
  "deployments_url": string;
  "delete_branch_on_merge": boolean | null;
  "default_branch": string;
  "created_at": string;
  "contributors_url": string;
  "contents_url": string;
  "compare_url": string | null;
  "commits_url": string | null;
  "comments_url": string | null;
  "collaborators_url": string | null;
  "clone_url": string | null;
  "branches_url": string | null;
  "blobs_url": string | null;
  "assignees_url": string | null;
  "archived": boolean;
  "archive_url": string | null;
  "allow_squash_merge": boolean | null;
  "allow_rebase_merge": boolean | null;
  "allow_merge_commit": boolean | null;
  "allow_forking": boolean | null;
  "allow_auto_merge": boolean | null;
  "repository_id": number;
  "id": string;
  "user": {
    "id": string;
    "avatar_url": string;
    "email": string;
    "events_url": string | null;
    "followers_url": string | null;
    "following_url": string | null;
    "gists_url": string | null;
    "gravatar_id": string | null;
    "html_url": string | null;
    "login": string;
    "name": string;
    "node_id": string | null;
    "organizations_url": string | null;
    "received_events_url": string | null;
    "repos_url": string | null;
    "role_type": string;
    "site_admin": boolean;
    "starred_at": string | null;
    "starred_url": string | null;
    "subscriptions_url": string | null;
    "url": string | null;
    "user_id": number;
    "user_view_type": string | null;
    "last_updated": Date | null;
  } | null;
  "security_and_analysis": {
    "last_updated": Date | null;
    "id": string;
    "advanced_security_status": string | null;
    "code_security_status": string | null;
    "dependabot_security_updates_status": string | null;
    "secret_scanning_ai_detection_status": string | null;
    "secret_scanning_non_provider_patterns_status": string | null;
    "secret_scanning_push_protection_status": string | null;
    "secret_scanning_status": string | null;
  } | null;
  "organization": {
    "last_updated": Date | null;
    "id": string;
    "login": string;
    "organization_id": number | null;
    "avatar_url": string;
    "email": string | null;
    "events_url": string;
    "followers_url": string;
    "following_url": string;
    "gists_url": string;
    "gravatar_id": string;
    "html_url": string;
    "name": string | null;
    "node_id": string;
    "organizations_url": string;
    "received_events_url": string;
    "repos_url": string;
    "role_type": string;
    "site_admin": boolean;
    "starred_at": string | null;
    "starred_url": string;
    "subscriptions_url": string;
    "url": string;
    "user_view_type": string | null;
  } | null;
  "code_of_conduct": {
    "last_updated": Date | null;
    "id": string;
    "node_id": string | null;
    "key": string | null;
    "name": string | null;
    "spdx_id": string | null;
    "url": string | null;
  } | null;
  "package_json": Array<{
    "id": string;
    "name": string;
    "package_version": string;
    "last_updated": Date | null;
  }>;
  "all_file_paths": Array<{
    "last_updated": Date | null;
    "id": string;
    "file_name": string;
    "file_type": ("PNG" | "JPG" | "JPEG" | "GIF" | "SVG" | "PSD" | "JSON" | "MD" | "TXT" | "LOG" | "ZIP" | "GEL" | "TOML" | "YML" | "YAML" | "JSONC" | "WOFF2" | "CSS" | "TS" | "TSX" | "JS" | "EDGEQL" | "XML" | "PDF" | "CSV" | "SQL" | "HTML");
    "path": string;
  }>;
  "all_dependencies": Array<{
    "id": string;
    "dependency_version": string;
    "name": string;
    "last_updated": Date | null;
    "dependency_type": ("Dev" | "Prod") | null;
  }>;
  "template_repository": {
    "id": string;
    "repository_id": number;
    "allow_auto_merge": boolean | null;
    "allow_forking": boolean | null;
    "allow_merge_commit": boolean | null;
    "allow_rebase_merge": boolean | null;
    "allow_squash_merge": boolean | null;
    "archive_url": string | null;
    "archived": boolean;
    "assignees_url": string | null;
    "blobs_url": string | null;
    "branches_url": string | null;
    "clone_url": string | null;
    "collaborators_url": string | null;
    "comments_url": string | null;
    "commits_url": string | null;
    "compare_url": string | null;
    "contents_url": string;
    "contributors_url": string;
    "created_at": string;
    "default_branch": string;
    "delete_branch_on_merge": boolean | null;
    "deployments_url": string;
    "description": string | null;
    "disabled": boolean;
    "downloads_url": string;
    "events_url": string;
    "fork": boolean;
    "forks": number;
    "forks_count": number;
    "forks_url": string | null;
    "full_name": string;
    "git_commits_url": string | null;
    "git_refs_url": string | null;
    "git_tags_url": string | null;
    "git_url": string | null;
    "has_discussions": boolean;
    "has_downloads": boolean | null;
    "has_issues": boolean | null;
    "has_pages": boolean;
    "has_projects": boolean | null;
    "has_wiki": boolean | null;
    "homepage": string | null;
    "hooks_url": string;
    "html_url": string;
    "is_template": boolean | null;
    "issue_comment_url": string;
    "issue_events_url": string;
    "issues_url": string;
    "keys_url": string;
    "labels_url": string;
    "language": string;
    "languages_url": string;
    "master_branch": string | null;
    "merges_url": string | null;
    "milestones_url": string | null;
    "mirror_url": string | null;
    "name": string;
    "node_id": string;
    "notifications_url": string;
    "open_issues": number;
    "open_issues_count": number;
    "private": boolean | null;
    "pulls_url": string | null;
    "pushed_at": string;
    "releases_url": string | null;
    "size": number;
    "ssh_url": string;
    "stargazers_count": number;
    "stargazers_url": string | null;
    "statuses_url": string | null;
    "subscribers_url": string | null;
    "subscription_url": string | null;
    "svn_url": string | null;
    "tags_url": string | null;
    "teams_url": string | null;
    "topics": Array<string>;
    "trees_url": string | null;
    "updated_at": string;
    "url": string;
    "visibility": ("public" | "private") | null;
    "watchers_count": number;
    "last_updated": Date | null;
    "anonymous_access_enabled": boolean | null;
    "auto_init": boolean | null;
    "merge_commit_message": string | null;
    "merge_commit_title": string | null;
    "network_count": number | null;
    "squash_merge_commit_message": string | null;
    "squash_merge_commit_title": string | null;
    "subscribers_count": number | null;
    "team_id": number | null;
    "temp_clone_token": string | null;
  } | null;
  "owner": {
    "id": string;
    "avatar_url": string;
    "email": string;
    "events_url": string | null;
    "followers_url": string | null;
    "following_url": string | null;
    "gists_url": string | null;
    "gravatar_id": string | null;
    "html_url": string | null;
    "login": string;
    "name": string;
    "node_id": string | null;
    "organizations_url": string | null;
    "received_events_url": string | null;
    "repos_url": string | null;
    "role_type": string;
    "site_admin": boolean;
    "starred_at": string | null;
    "starred_url": string | null;
    "subscriptions_url": string | null;
    "url": string | null;
    "user_id": number;
    "user_view_type": string | null;
    "last_updated": Date | null;
  };
  "license": {
    "id": string;
    "html_url": string | null;
    "key": string;
    "name": string;
    "node_id": string;
    "spdx_id": string | null;
    "url": string | null;
    "last_updated": Date | null;
  } | null;
} | null;

export function insertOrUpdateRepository(client: Executor, args: InsertOrUpdateRepositoryArgs): Promise<InsertOrUpdateRepositoryReturns> {
  return client.querySingle(`\
with NewRepository := (insert Repository {
     repository_id:= <int64>$repository_id,
     archived:= <bool>$archived,
     contents_url:= <str>$contents_url,
     contributors_url:= <str>$contributors_url,
     created_at:= <str>$created_at,
     default_branch:= <str>$default_branch,
     deployments_url:= <str>$deployments_url,
     description:= <str>$description,
     disabled:= <bool>$disabled,
     downloads_url:= <str>$downloads_url,
     events_url:= <str>$events_url,
     fork:= <bool>$fork,
     forks:= <int64>$forks,
     forks_count:= <int64>$forks_count,
     full_name:= <str>$full_name,
     has_discussions:= <bool>$has_discussions,
     has_issues:= <bool>$has_issues,
     has_pages:= <bool>$has_pages,
     has_projects:= <bool>$has_projects,
     has_wiki:= <bool>$has_wiki,
     homepage:= <str>$homepage,
     hooks_url:= <str>$hooks_url,
     html_url:= <str>$html_url,
     issue_comment_url:= <str>$issue_comment_url,
     issue_events_url:= <str>$issue_events_url,
     issues_url:= <str>$issues_url,
     keys_url:= <str>$keys_url,
     labels_url:= <str>$labels_url,
     language:= <str>$language,
     languages_url:= <str>$languages_url,
     name:= <str>$name,
     node_id:= <str>$node_id,
     notifications_url:= <str>$notifications_url,
     open_issues:= <int64>$open_issues,
     open_issues_count:= <int64>$open_issues_count,
     owner:= (
        select User 
        # this is what the constraint exclusive is on
        filter .user_id = <int64>$owner_user_id
        limit 1
     ) ?? (
        insert User {
            avatar_url := <str>$owner_avatar_url,
            name := <str>$owner_name,
            email := <str>$owner_email, 
            login := <str>$owner_login,
            user_id := <int64>$owner_user_id,
            role_type := <str>$owner_role_type,
            site_admin := <bool>$owner_site_admin,
            events_url := <optional str>$owner_events_url,
            followers_url := <optional str>$owner_followers_url,
            following_url := <optional str>$owner_following_url,
            gists_url := <optional str>$owner_gists_url,
            gravatar_id := <optional str>$owner_gravatar_id, 
            html_url := <optional str>$owner_html_url,
            node_id := <optional str>$owner_node_id,
            organizations_url := <optional str>$owner_organizations_url,
            received_events_url := <optional str>$owner_received_events_url,
            repos_url := <optional str>$owner_repos_url,
            starred_url := <optional str>$owner_starred_url,
            starred_at := <optional str>$owner_starred_at,
            subscriptions_url := <optional str>$owner_subscriptions_url,
            url := <optional str>$owner_url,
            user_view_type := <optional str>$owner_user_view_type,
        }
     ),
    private:= <bool>$private,
    pushed_at:= <str>$pushed_at,
    url:= <str>$url,
    ssh_url:= <str>$ssh_url,
    size:= <int64>$size,
    stargazers_count:= <int64>$stargazers_count,
    updated_at:= <str>$updated_at,
    watchers_count:= <int64>$watchers_count,
    license := (
        select License 
        # this is what the constraint exclusive is on
        filter .name = <str>$license_name
        limit 1
    ) ?? (
        insert License {
            key := <str>$license_key,
            name := <str>$license_name,
            url := <str>$license_url,
            spdx_id := <str>$license_spdx_id,
            node_id := <str>$license_node_id,
            html_url := <optional str>$license_html_url,

        }
    ),
    archive_url:= <optional str>$archive_url,
    assignees_url:= <optional str>$assignees_url,
    blobs_url:= <optional str>$blobs_url,
    branches_url:= <optional str>$branches_url,
    clone_url:= <optional str>$clone_url,
    collaborators_url:= <optional str>$collaborators_url,
    comments_url:= <optional str>$comments_url,
    commits_url:= <optional str>$commits_url,
    compare_url:= <optional str>$compare_url,
    merges_url:= <optional str>$merges_url,
    milestones_url:= <optional str>$milestones_url,
    mirror_url:= <optional str>$mirror_url,
    git_commits_url:= <optional str>$git_commits_url,
    git_refs_url:= <optional str>$git_refs_url,
    git_tags_url:= <optional str>$git_tags_url,
    git_url:= <optional str>$git_url,
    stargazers_url:= <optional str>$stargazers_url,
    statuses_url:= <optional str>$statuses_url,
    subscribers_url:= <optional str>$subscribers_url,
    subscription_url:= <optional str>$subscription_url,
    pulls_url:= <optional str>$pulls_url,
    releases_url:= <optional str>$releases_url,
    svn_url:= <optional str>$svn_url,
    tags_url:= <optional str>$tags_url,
    teams_url:= <optional str>$teams_url,
    trees_url:= <optional str>$trees_url,
    allow_auto_merge:= <optional bool>$allow_auto_merge,
    allow_forking:= <optional bool>$allow_forking,
    allow_merge_commit:= <optional bool>$allow_merge_commit,
    allow_rebase_merge:= <optional bool>$allow_rebase_merge,
    allow_squash_merge:= <optional bool>$allow_squash_merge,
    delete_branch_on_merge:= <optional bool>$delete_branch_on_merge,
    forks_url:= <optional str>$forks_url,
    has_downloads:= <optional bool>$has_downloads,
    is_template:= <optional bool>$is_template,
    master_branch:= <optional str>$master_branch,
    template_repository:= 
        assert_single(
            (select detached Repository 
            filter detached Repository.repository_id = <int64>$template_repository_id limit 1)
        ),
    multi topics:= <optional str>$topics,
    visibility:= <optional str>$visibility,
    }
  unless conflict on .repository_id
  else (
    update Repository 
    filter .repository_id = <int64>$repository_id
    set {
     repository_id:= <int64>$repository_id,
     archived:= <bool>$archived,
     contents_url:= <str>$contents_url,
     contributors_url:= <str>$contributors_url,
     created_at:= <str>$created_at,
     default_branch:= <str>$default_branch,
     deployments_url:= <str>$deployments_url,
     description:= <str>$description,
     disabled:= <bool>$disabled,
     downloads_url:= <str>$downloads_url,
     events_url:= <str>$events_url,
     fork:= <bool>$fork,
     forks:= <int64>$forks,
     forks_count:= <int64>$forks_count,
     full_name:= <str>$full_name,
     has_discussions:= <bool>$has_discussions,
     has_issues:= <bool>$has_issues,
     has_pages:= <bool>$has_pages,
     has_projects:= <bool>$has_projects,
     has_wiki:= <bool>$has_wiki,
     homepage:= <str>$homepage,
     hooks_url:= <str>$hooks_url,
     html_url:= <str>$html_url,
     issue_comment_url:= <str>$issue_comment_url,
     issue_events_url:= <str>$issue_events_url,
     issues_url:= <str>$issues_url,
     keys_url:= <str>$keys_url,
     labels_url:= <str>$labels_url,
     language:= <str>$language,
     languages_url:= <str>$languages_url,
     name:= <str>$name,
     node_id:= <str>$node_id,
     notifications_url:= <str>$notifications_url,
     open_issues:= <int64>$open_issues,
     open_issues_count:= <int64>$open_issues_count,
     owner:= (
        select User 
        # this is what the constraint exclusive is on
        filter .user_id = <int64>$owner_user_id
        limit 1
     ) ?? (
        insert User {
            avatar_url := <str>$owner_avatar_url,
            name := <str>$owner_name,
            email := <str>$owner_email, 
            login := <str>$owner_login,
            user_id := <int64>$owner_user_id,
            role_type := <str>$owner_role_type,
            site_admin := <bool>$owner_site_admin,
            events_url := <optional str>$owner_events_url,
            followers_url := <optional str>$owner_followers_url,
            following_url := <optional str>$owner_following_url,
            gists_url := <optional str>$owner_gists_url,
            gravatar_id := <optional str>$owner_gravatar_id, 
            html_url := <optional str>$owner_html_url,
            node_id := <optional str>$owner_node_id,
            organizations_url := <optional str>$owner_organizations_url,
            received_events_url := <optional str>$owner_received_events_url,
            repos_url := <optional str>$owner_repos_url,
            starred_url := <optional str>$owner_starred_url,
            starred_at := <optional str>$owner_starred_at,
            subscriptions_url := <optional str>$owner_subscriptions_url,
            url := <optional str>$owner_url,
            user_view_type := <optional str>$owner_user_view_type,
        }
     ),
    private:= <bool>$private,
    pushed_at:= <str>$pushed_at,
    url:= <str>$url,
    ssh_url:= <str>$ssh_url,
    size:= <int64>$size,
    stargazers_count:= <int64>$stargazers_count,
    updated_at:= <str>$updated_at,
    watchers_count:= <int64>$watchers_count,
    license := (
        select License 
        # this is what the constraint exclusive is on
        filter .name = <str>$license_name
        limit 1
    ) ?? (
        insert License {
            key := <str>$license_key,
            name := <str>$license_name,
            url := <str>$license_url,
            spdx_id := <str>$license_spdx_id,
            node_id := <str>$license_node_id,
            html_url := <optional str>$license_html_url,

        }
    ),
    archive_url:= <optional str>$archive_url,
    assignees_url:= <optional str>$assignees_url,
    blobs_url:= <optional str>$blobs_url,
    branches_url:= <optional str>$branches_url,
    clone_url:= <optional str>$clone_url,
    collaborators_url:= <optional str>$collaborators_url,
    comments_url:= <optional str>$comments_url,
    commits_url:= <optional str>$commits_url,
    compare_url:= <optional str>$compare_url,
    merges_url:= <optional str>$merges_url,
    milestones_url:= <optional str>$milestones_url,
    mirror_url:= <optional str>$mirror_url,
    git_commits_url:= <optional str>$git_commits_url,
    git_refs_url:= <optional str>$git_refs_url,
    git_tags_url:= <optional str>$git_tags_url,
    git_url:= <optional str>$git_url,
    stargazers_url:= <optional str>$stargazers_url,
    statuses_url:= <optional str>$statuses_url,
    subscribers_url:= <optional str>$subscribers_url,
    subscription_url:= <optional str>$subscription_url,
    pulls_url:= <optional str>$pulls_url,
    releases_url:= <optional str>$releases_url,
    svn_url:= <optional str>$svn_url,
    tags_url:= <optional str>$tags_url,
    teams_url:= <optional str>$teams_url,
    trees_url:= <optional str>$trees_url,
    allow_auto_merge:= <optional bool>$allow_auto_merge,
    allow_forking:= <optional bool>$allow_forking,
    allow_merge_commit:= <optional bool>$allow_merge_commit,
    allow_rebase_merge:= <optional bool>$allow_rebase_merge,
    allow_squash_merge:= <optional bool>$allow_squash_merge,
    delete_branch_on_merge:= <optional bool>$delete_branch_on_merge,
    forks_url:= <optional str>$forks_url,
    has_downloads:= <optional bool>$has_downloads,
    is_template:= <optional bool>$is_template,
    master_branch:= <optional str>$master_branch,
    template_repository:= 
        assert_single(
            (select detached Repository 
            filter detached Repository.repository_id = <int64>$template_repository_id limit 1)
        ),
    multi topics:= <optional str>$topics,
    visibility:= <optional str>$visibility,
    }
  )
)
select NewRepository {**};`, args);

}
